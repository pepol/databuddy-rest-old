{
    "swagger": "2.0",
    "info": {
        "description": "API to use DataBuddy data storage system",
        "title": "DataBuddy",
        "contact": {
            "name": "Peter Polacik"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1alpha1",
    "paths": {
        "/": {
            "get": {
                "description": "Retrieve a list of all namespaces in DataBuddy system.\nIf RBAC is enabled, the list returned contains only namespaces\nvisible to the authenticated user.\nOptional query parameter \"prefix\" can be provided to return\nonly namespaces with the given prefix.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "summary": "List accessible namespaces",
                "parameters": [
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Prefix for namespace names",
                        "name": "prefix",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1alpha2.Namespace"
                            }
                        }
                    }
                }
            }
        },
        "/{namespace}": {
            "get": {
                "description": "Retrieve detailed information about namespace by name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "summary": "Get namespace by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the namespace to retrieve",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1alpha2.Namespace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1alpha2.RequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1alpha2.RequestError"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify namespace with \"name\" (path parameter) to match\nthe provided namespace object. Create namespace if does not exist.\nThe name provided in path and name in request body (if set) MUST\nbe the same.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "summary": "Set namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The namespace object",
                        "name": "spec",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha2.Namespace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1alpha2.Namespace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1alpha2.RequestError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete provided namespace.\nThis method also deletes all collections that are part of the namespace.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1alpha2.Namespace"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1alpha2.RequestError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "v1alpha2.Namespace": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "v1alpha2.RequestError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}